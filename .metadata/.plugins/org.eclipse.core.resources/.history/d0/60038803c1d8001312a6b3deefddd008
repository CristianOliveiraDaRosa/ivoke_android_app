package com.app.ivoke.libraries;

import com.app.ivoke.Common;
import com.app.ivoke.helpers.DebugHelper;
import com.app.ivoke.helpers.SettingsHelper;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager.NameNotFoundException;
import android.util.Log;

public class GCMManager {
	DebugHelper dbg = new DebugHelper("GCMManager");
	
	public static final String PREF_REGISTRATION_ID = "com.app.ivoke.registration_id";
	public static final String PREF_APP_VERSION     = "com.app.ivoke.registration_id";
	
	public String getRegistrationId(Context context) {
		dbg.method("getRegistrationId");
	    final SharedPreferences prefs = getGCMPreferences(context);
	    String registrationId = prefs.getString(PREF_REGISTRATION_ID, "");
	    if (registrationId.isEmpty()) {
	    	dbg.log("Not registration");
	        return "";
	    }
	    // Check if app was updated; if so, it must clear the registration ID
	    // since the existing regID is not guaranteed to work with the new
	    // app version.
	    int registeredVersion = prefs.getInt(PREF_APP_VERSION, Integer.MIN_VALUE);
	    int currentVersion = getAppVersion(context);
	    if (registeredVersion != currentVersion) {
	    	dbg.log("App version changed.");
	        return "";
	    }
	    return registrationId;
	}
	
	private SharedPreferences getGCMPreferences(Context context) {
	    return SettingsHelper.getSharedPreference(context);
	}
	
	/**
	 * @return Application's version code from the {@code PackageManager}.
	 */
	private static int getAppVersion(Context context) {
	    try {
	        PackageInfo packageInfo = context.getPackageManager()
	                .getPackageInfo(context.getPackageName(), 0);
	        return packageInfo.versionCode;
	    } catch (NameNotFoundException e) {
	        throw new RuntimeException("Could not get package name: " + e);
	    }
	}
}
