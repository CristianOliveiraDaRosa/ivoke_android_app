package com.app.ivoke.controllers.main;

import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.app.ivoke.R;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;

import com.app.ivoke.helpers.DebugHelper;
import com.app.ivoke.helpers.MessageHelper;
import com.app.ivoke.objects.*;
import com.app.ivoke.objects.adapters.MuralAdapter;
import com.app.ivoke.objects.interfaces.IAsyncCallBack;

public class MuralFragment extends Fragment {
	  
	  MainActivity mainAct;
	  MuralAdapter adapter;
	  DebugHelper dbg = new DebugHelper("MuralFragment");
	 
	  Timer postRefreshTimer;
	  
	  List<MuralPost> postagens;
	  
	  ListView listView;
	  
	  public void setPosts(List<MuralPost> pPostagens)
	  {
		  postagens = pPostagens;
		  if(adapter!=null)
		  {  
			  adapter.setItens(postagens);
		      adapter.notifyDataSetChanged();
		  }
	  }
	  
	  @Override
	  public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		dbg.method("onCreateView");
	    View view = inflater.inflate(R.layout.main_mural_fragment, container, false);
	    
	    mainAct = (MainActivity) getActivity();
	    
	    listView = (ListView) view.findViewById(R.id.main_mural_posts_list);
	    
	    dbg.log("Before instance adapter");
	    dbg.var("postagens", postagens);
	    
	    adapter = new MuralAdapter(view.getContext(), postagens);
	    dbg.var("adapter", adapter);
	    
	    listView.setAdapter(adapter);
	    
	    return view;
	  }
	  
	  public void refreshStop() throws InterruptedException
	  {
		  if(postRefreshTimer!=null)
			  postRefreshTimer.wait();
	  }
	  
	  public void refreshStart()
	  {
		  postRefreshTimer.schedule(new TimerTask() {
			@Override
			public void run() {
			}
		  }, 10);
	  }
	  
	  public void refreshListView()
	  {
		 if(listView!=null)
			 listView.ref
	  }
	  
	  private class MuralCallback implements IAsyncCallBack
	    {	
	    	@Override
			public void onCompleteTask(Object pResult) {
	    		dbg._class(this).method("onCompleteTask").par("pResult", pResult);
	    		
	    		try {
	    			List<MuralPost> posts;
	    			posts = mainAct.muralModel.getListPostsFromJSon(pResult.toString());
					setPosts(posts);
		    	} catch (Exception e) {
					MessageHelper.unexpectedException(mainAct), e);
				}
	    		
			}

			@Override
			public void onPreExecure() {
				showProcessingFragment();
			}

			@Override
			public void onProgress(int pPercent, Object pObject) {}

	    }
}
